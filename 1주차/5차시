# [에이블런] [프론트엔드부트캠프] 5차시 TIL

### 오늘의 학습 내용
오늘은 다양한 애니메이션 효과를 학습하였다. 특히, CSS의 keyframes를 활용한 애니메이션 구현 방법을 집중적으로 다루었다.

## 1. Thumbnail Hover 효과
이미지 썸네일에 마우스를 올렸을 때 나타나는 애니메이션 효과를 구현하였다. 

![ThumbnailHover효과](img/thumbnailhover효과.gif)

### 예제 코드
**HTML**
```html
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>layout</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <section>
        <div class="wrap">
            <h1>Lorem ipsum dolor sit amet.</h1>
            <p>Lorem ipsum sit amet.</p>

            <div class="inner">
                <article>
                    <div class="pic">
                        <img src="img/pic1.png" alt="">
                    </div>
                    <h2>Here comes sub title.</h2>
                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Tenetur.</p>
                    <a href="#">view</a>
                </article>
                <article>
                    <div class="pic">
                        <img src="img/pic1.png" alt="">
                    </div>
                    <h2>Here comes sub title.</h2>
                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Tenetur.</p>
                    <a href="#">view</a>
                </article>
                <!-- 세번째 아티클  -->
                <article>
                    <div class="pic">
                        <img src="img/pic1.png" alt="">
                        <!-- pic에 호버했을 때 보일 텍스트-->
                        <p>Lorem, ipsum</p>
                    </div>
                    <h2>Here comes sub title.</h2>
                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Tenetur.</p>
                    <a href="#">view</a>
                </article>
                <article>
                    <div class="pic">
                        <img src="img/pic1.png" alt="">
                    </div>
                    <h2>Here comes sub title.</h2>
                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Tenetur.</p>
                    <a href="#">view</a>
                </article>
            </div>
        </div>
    </section>
</body>
</html>
```

**CSS**
```css
@charset 'utf-8';
/*reset*/
*{ margin:0px; padding:0px}
ul,ol,li{ list-style:none; }
a{text-decoration:none; }

section{
    width: 100%;   background: #ddd;
    padding:180px 0; 
}
section .wrap{
    width: 1180px;   margin:0 auto; 
}
section .wrap h1{
    font:bold 22px/1 arial;   color:#555; 
    text-align:center;   margin-bottom: 10px;
}
section .wrap>p{
    font:12px/1 arial; color:#777; 
    text-align: center;  margin-bottom:80px; 
}

section .wrap .inner{
    width:100%; 
}
section .wrap .inner::after{
    content:''; display: block; clear: both;
}
section .wrap .inner article{
    width:280px; float: left;
    margin-right: 20px;
}
section .wrap .inner article:last-child{
    margin-right: 0;
}
/*article styling*/
section .wrap .inner article .pic{
    width: 100%; 
    height: 100px; background: #555;
    margin-bottom: 15px;
    overflow:hidden;
}
section .wrap .inner article .pic img{
    width: 100%; height: 100%; 
    object-fit: cover;  
    transition:all 0.5s;   
}

section .wrap .inner article h2{
    font:bold 16px/1 arial; color: #555;
    margin-bottom: 10px;
}
section .wrap .inner article p{
    font:14px/1.2 arial; color:#666; 
    margin-bottom: 20px;
}
section .wrap .inner article a{
    display:inline-block; 
    padding:5px 20px; 
    border: 1px solid #888;
    font:bold 12px/1 arial; color: #333;
}

/* pic에 hover했을 때 전환구문 */
section .wrap .inner article:nth-of-type(1) .pic img{   
    transform:scale(1); 
    transition:all 0.5s;   
}
section .wrap .inner article:nth-of-type(1) .pic:hover img{
    transform:scale(1.2); 
}
section .wrap .inner article:nth-of-type(2) .pic img{   
    transform:rotateY(0); 
    transition:all 0.5s;   
}
section .wrap .inner article:nth-of-type(2) .pic:hover img{
    transform:rotateY(360deg); 
}

section .wrap .inner article:nth-of-type(3) .pic{
    position: relative;
}
section .wrap .inner article:nth-of-type(3) .pic>p{
    font:16px/40px  arial;
    text-align: center;
    position: absolute;
    bottom: 0; left: 0; 
    width: 100%; 
    height: 40px;
    background: rgba(0,0,0,0.5);
    margin-bottom: -40px; 
    color: #fff;
    transition: all 0.5s;
}
section .wrap .inner article:nth-of-type(3) .pic:hover >p{
    margin-bottom: 0;
}

section .wrap .inner article .pic{
    position: relative;
}
section .wrap .inner article:nth-of-type(4) .pic::after{
    content:''; 
    display: block; 
    width: 100%; height: 100%; 
    position: absolute; 
    top: 0; left: 0; 
    background: linear-gradient(45deg, pink, lightblue);
    opacity:0; 
    transition:0.5s; 
}
section .wrap .inner article:nth-of-type(4) .pic:hover::after{
    opacity:0.4;
}
```

### 핵심 포인트
- `transition: transform 0.5s ease;`을 통해 이미지 확대 효과를 부드럽게 처리.
- `opacity` 속성을 활용하여 캡션의 투명도를 조절.

## 2. Loading Bar
로딩 바 애니메이션을 구현하였다. 페이지 로딩 중에 사용자에게 진행 상황을 시각적으로 알려주는 방법을 배웠다.

![loading_bar](/img/loading_bar.gif)

### 예제 코드
**HTML**
```html
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>loading Bar</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="box1">
        <div class="loading">
            <div class="hair"></div>
        </div>
    </div>
    <div class="box2">
        <div class="loading2"></div>
    </div>
</body>
</html>
```

**CSS**
```css
@charset 'UTF-8';

*{
    margin: 0;
    padding: 0;
}

.box1 {
    width: 300px;
    height: 300px;
    border: 1px solid #000;
    /* background-color: #000; */
}

.box1 .loading {
    width: 80px;
    height: 80px;
    border-radius: 40px;
    border: 3px solid pink;
    margin: 110px auto;
    transition: all 10s;
    position: relative;
    animation: rotate 3s linear infinite;
}
.box1 .loading::after {
    content: '';
    display: block;
    width: 12px;
    height: 12px;
    background-color: rgb(255, 251, 0);
    position: absolute;
    top: 8px;
    left: 0px;
}
.box1 .loading::before {
    content: '';
    display: block;
    width: 12px;
    height: 12px;
    background-color: rgb(0, 153, 255);
    position: absolute;
    top: 0px;
    left: 8px;
}
.box1 .loading .hair {
    content: '';
    display: block;
    width: 20px;
    height: 2px;
    background-color: pink;
    position: absolute;
    top: 4px;
    left: 4px;
    z-index: -1;
    transform: rotate(deg);
}
.box1:hover .loading {
    transform: rotate(3600deg);
}
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    10%{
        transform: rotate(-50deg);
    }
    20%{
        transform: rotate

(200deg);
    }
    111%{
        transform: rotate(-200deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.box2 {
    width: 300px; height: 300px;
    border: 1px solid #000;
}
.box2 .loading2{
    width: 150px;
    height: 20px;
    background-color: #ddd;
    margin: 0 auto;
    margin-top: calc((300px - 20px)/2);
    position: relative;
}
.box2 .loading2::before{
    content: '';
    display: block;
    width: 0%; height: 100%;
    position: absolute; top: 0; left: 0;
    background-color: crimson;
    transition: all 1s;
}
.box2 .loading2::after{
    content: 'loading...';
    font: 12px/20px arial;
    color: #fff;
    width: 100%;
    height: 20px;
    display: block;
    position: absolute;
    top: 0; left: 0;
    text-align: center;
    z-index: 2;
}
.box2:hover .loading2::before {
    width: 100%;
}
```

### 핵심 포인트
- `@keyframes`를 사용하여 애니메이션의 시작과 끝 상태를 정의.
- `animation: rotate 3s linear infinite;`를 통해 애니메이션을 반복 실행.

## 3. Animation
CSS 애니메이션을 이용하여 다양한 시각적 효과를 구현하였다.

![Animation](img/animation.gif)

### 예제 코드
**HTML**
```html
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Animation</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="box1">
        <h1>ROTATION</h1>
        <div id="hair"></div>
    </div>
</body>
</html>
```

**CSS**
```css
@charset 'UTF-8';

* {
    margin: 0; padding: 0;
}

ul, ol, li {
    list-style: none;
}
a{
    text-decoration: none;
}

#box1 {
    width: 200px; height: 200px;
    border-radius: 50%;
    background-color: pink;
    position: absolute;
    left: 0; top: 0;
    animation: move 3s linear infinite alternate-reverse;
}
#box1::before {
    content: '';
    display: block;
    width: 20px;
    height: 20px;
    background-color: skyblue;
    position: absolute;
    top: 25px; left: 5px;
}
#box1::after{
    content: '';
    display: block;
    width: 20px;
    height: 20px;
    background-color: yellow;
    position: absolute;
    top: 5px; left: 25px;
}

#box1 h1{
    font: 20px/200px arial;
    text-align: center;
}

#box1 #hair {
    content: '';
    display: block;
    width: 60px;
    height: 10px;
    background-color: pink;
    position: absolute;
    top: 17.5px; left: -10%;
}

@keyframes move {
    from {
        left: 0px;
        transform: rotate(0deg);
    }
    to {
        left: 200px;
        transform: rotate(360deg);
    }
}
```

### 핵심 포인트
- `@keyframes`를 사용하여 회전 애니메이션을 정의.
- `animation: move 3s linear infinite alternate-reverse;`를 통해 회전을 지속적으로 반복.

## 4. Town Animation
마을 애니메이션을 구현하여 다양한 요소들이 움직이는 효과를 배웠다.

![TownAnimation](/img/townAnimation.gif)

### 예제 코드
**HTML**
```html
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Town Animation</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Bocchi The Rock</h1>
    <section>
        <article class="sky">
            <img src="img/sun.png" alt="sun" class="sun">
            <img src="img/moon.png" alt="moon" class="moon">
            <img src="img/cloud1.png" alt="cloud1" class="cloud1">
            <img src="img/cloud2.png" alt="cloud2" class="cloud2">
        </article>
        <article class="town">
            <img src="img/circle.png" alt="circle" class="circle">
            <img src="img/town_night.png" alt="night" class="night">
            <img src="img/town_day.png" alt="day" class="day">
        </article>
        <article class="people">
            <img src="img/family.png" alt="family" class="family">
            <img src="img/man.png" alt="man" class="man">
        </article>
    </section>
</body>
</html>
```

**CSS**
```css
@charset 'UTF-8';
@import url('https://fonts.googleapis.com/css2?family=Kalnia+Glaze:wght@100..700&display=swap');

* {
    margin: 0;
    padding: 0;
}
ul, li, ol {
    list-style: none;
}
a{
    text-decoration: none;
}

body{
    background-color: skyblue;
    animation: time 40s linear infinite ;
    overflow: hidden; /* .sky의 자식 요소가 넘칠 때 숨기도록 설정 */
}

@keyframes time {
    from {
        background-color: skyblue;
    }
    15%{
        background-color: skyblue;
    }
    25% {
        background-color: rgb(244, 138, 39);
    }
    30% {
        background-color: rgb(0, 0, 73);
    }
    85% {
        background-color: rgb(0, 0, 73);
    }
    90% {
        background-color: rgb(244, 138, 39);
    }
    to {
        background-color: skyblue;
    }
}

h1 {
    width: 1000px; 
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%, 150%);
    font: 100px/1 "Kalnia Glaze";
    color: #000;
    text-align: center;
}

section{
    width: 1000px; height: 400px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -70%);
}

section .sky {
    position: absolute;
    width: 100%; height: 100%;
    position: relative; /* .sky를 상대 위치로 설정하여 자식 요소의 절대 위치 기준이 되도록 함 */
}
section .sky .sun {
    position: absolute; 
    top: -250px; /* 'px' 단위 추가 */
    left: 50%;
    display: block;
    width: 250px;
    height: auto;
    object-fit: fill;
    transform-origin: 50% 600%;
    animation: sun 40s linear infinite;
}
@keyframes sun {
    from {
        transform: rotate(-45deg);
        opacity: 1;
    }
    25%{
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
    75%{
        opacity: 0;
    }
    to {
        transform: rotate(315deg);
        opacity: 1;
    }
}
section .sky .moon {
    position: absolute; 
    top: -250px; /* 'px' 단위 추가 */
    left: 50%;
    display: block;
    width: 250px;
    height: auto;
    object-fit: fill;
    transform-origin: 50% 500%;
    animation: moon 40s linear infinite;
}
@keyframes moon {
    from {
        transform: rotate(135deg);
        opacity: 0;
    }
    25%{
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    75%{
        opacity: 1;
    }
    to {
        opacity: 0;
        transform: rotate(495deg);
    }
}

section .sky .cloud1{
    position: absolute; top: -30px; left: 0%;
    animation: flow 10s linear infinite;
}

section .sky .cloud2{
    position: absolute; top: 20px; left: 0;
    animation: flow 8s linear infinite;
}

@keyframes flow {
    from {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    to {
        opacity: 0;
        left: 90%;
    }
}

section .town .night{
    position: absolute; bottom: 0; left: 

40px;
}
section .town .day{
    position: absolute; bottom: 0; left: 40px;
    animation: day 20s linear infinite alternate;
}
@keyframes day {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

section .town .circle{
    position: absolute;
    bottom: 97px;
    left: 340px;
    animation: rotate 100s linear infinite;
}
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(3600deg);
    }
}

section .people .man {
    position: absolute;
    display: block;
    width: 20px;
    height: auto;
    object-fit: fill;
    animation: move 30s linear infinite , 
    peopleTime 20s linear infinite alternate;
}
section .people .family {
    position: absolute;
    display: block;
    width: 60px;
    height: auto;
    object-fit: fill;
    animation: move 5s linear infinite, 
    peopleTime 20s linear infinite alternate;
}

@keyframes move {
    from { 
        bottom: 0px;
        left: 0%;
        transform: scaleX(1);
    }
    49% {
        transform: scaleX(1);
    }
    50%{
        transform: scaleX(-1);
        left: 100%;
    }
    99% {
        transform: scaleX(-1);
    }
    to {
        bottom: 0px;
        left: 0%;
        transform: scaleX(1);
    }
}

@keyframes peopleTime {
    from { 
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    60% {
        opacity: 0;
    }
    to {
        opacity: 0;
    }
}
```

### 핵심 포인트
- `@keyframes`를 사용하여 태양과 달의 움직임을 정의.
- `animation: time 40s linear infinite;`를 통해 하루의 시간 흐름을 표현.
- 다양한 애니메이션을 사용하여 구름, 마을, 사람들의 움직임을 구현.

## 5. Layout
과제로 내주신 Layout만들기 이다. 

### 원본
![originalLayout](img/originalLatout.png)

### 수제 레이아웃
![Layout](img/layout.png)

### 코드
**HTML**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Community Board</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Lorem ipsum dolor sit amet.</h1>
            <p>Lorem, ipsum dolor.</p>
            <button class="main-btn">View Comments</button>
        </header>
        <div class="board">
            <div class="board-item">
                <div class="board-content">
                    <h2>Here comes community board contents in detail.</h2>
                    <p>Content description comes here in detail. Here comes community board contents in detail. Content description comes here in detail. Content description comes here in detail.  Here comes community board contents in detail. </p>
                    <span>2020.01.30</span>
                </div>
                <button class="view-btn">VIEW</button>
            </div>
            <div class="board-item">
                <div class="board-content">
                    <h2>Here comes community board contents in detail.</h2>
                    <p>Content description comes here in detail. Here comes community board contents in detail. Content description comes here in detail. Content description comes here in detail.  Here comes community board contents in detail. </p>
                    <span>2020.01.30</span>
                </div>
                <button class="view-btn">VIEW</button>
            </div>
            <div class="board-item">
                <div class="board-content">
                    <h2>Here comes community board contents in detail.</h2>
                    <p>Content description comes here in detail. Here comes community board contents in detail. Content description comes here in detail. Content description comes here in detail.  Here comes community board contents in detail. </p>
                    <span>2020.01.30</span>
                </div>
                <button class="view-btn">VIEW</button>
            </div>
            <div class="board-item">
                <div class="board-content">
                    <h2>Here comes community board contents in detail.</h2>
                    <p>Content description comes here in detail. Here comes community board contents in detail. Content description comes here in detail. Content description comes here in detail.  Here comes community board contents in detail. </p>
                    <span>2020.01.30</span>
                </div>
                <button class="view-btn">VIEW</button>
            </div>
        </div>
    </div>
</body>
</html>
```

**CSS**
```css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f5f5f5;
}

.container {
    max-width: 68vw;
    margin: 3vh auto;
    padding: 20px;
}

header {
    text-align: center;
    padding: 40px auto;
    margin-bottom: 11vh;
}

header h1 {
    margin: 0;
    font-size: 2.4vh;
    font-weight: bold;
}

header p {
    margin: 0.1vh 0 4vh;
    font-size: 1.7vh;
    color: #777;
}

.main-btn {
    width: 22.8vh;
    height: 4.8vh;
    background: linear-gradient(135deg, #888, #444);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    color: #fff;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    font-size: 1.3vh;
    font-weight: bold;
    text-transform: uppercase;
}

.board {
    width: 100%;
    border-top: 2px solid #333;
    border-bottom: 2px solid #333;
}

.board-item {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 3.3vh;
    padding-right: 0;
    padding-left: 0;
    border-bottom: 1.5px solid #ddd;
}

.board-item:nth-last-of-type(1){
    border: 0px;
}

.board-content {
    margin-left: 3.6vh;
    padding-right: 6%;
    flex: 1;
}

.board-content h2 {
    margin: 0;
    font-size: 2.3vh;
}

.board-content p {
    margin: 1.5vh 0;
    margin-bottom: 3vh;
    color: #777;
}

.board-content span {
    font-size: 1.5vh;
    font-weight: bold;
    color: #000;
}

.view-btn {
    width: 10vw;
    height: 7vh;
    color: #333;
    border: 1.5px solid #aaa;
    cursor: pointer;
    border-radius: 2px;
    font-size: 1.4vh;
    transition: all 0.3s, color 0.3s;
}

.view-btn:hover {
    background-color: #333;
    color: #fff;
}
```

### 핵심 포인트
- `flex` 속성을 사용하여 레이아웃을 유연하게 배치.
- 다양한 UI 요소들을 배치하고 스타일링하는 방법을 학습.

### 에러 발생 및 해결
1. **에러 발생 예시**: `animation` 속성이 적용되지 않을 때.
   - **원인**: CSS 파일에 `@keyframes`가 제대로 정의되지 않음.
   - **해결 방법**: `@keyframes`를 정확하게 정의하고, `animation` 속성에 올바른 값을 할당.

2. **에러 발생 예시**: 레이아웃이 의도한 대로 배치되지 않을 때.
   - **원인**: `flex` 속성이 제대로 설정되지 않음.
   - **해결 방법**: `flex` 속성을 다시 확인하고 올바르게 설정.

#### 여담

오늘은 금요일이다. 오늘 수업은 매우 EZ 하였고 매우 재밌었다. <br>특히 애니메이션을 넣는 방법은 매우 흥미로웠다. <br>빨리 스크립트를 배워서 더 높은 퀄리티의 웹을 작성할수 있도록 하고싶다. 

## 해시태그
#프론트엔드 #프론트엔드개발 #프론트엔드부트캠프 #프론트엔드교육 #프론트엔드국비지원 #웹개발부트캠프 #웹개발교육 #웹개발국비지원 #에이블런부트캠프
